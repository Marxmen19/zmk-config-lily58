/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_f12 {
            bindings = <&kp F12>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        onec_open: onec_open {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp FSLH &kp FSLH &kp SPACE &kp PLUS &kp PLUS &kp PLUS &kp M &kp UNDER &kp B &kp E &kp L &kp O &kp G &kp L &kp A &kp Z &kp O &kp V &kp SPACE &kp FSLH &kp SPACE &kp SPACE &kp FSLH &kp SPACE>;
            label = "ONEC_OPEN";
        };

        onec_close: onec_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp FSLH &kp FSLH &kp SPACE &kp MINUS &kp MINUS &kp PLUS &kp M &kp UNDER &kp B &kp E &kp L &kp O &kp G &kp L &kp A &kp Z &kp O &kp V &kp SPACE &kp FSLH &kp SPACE &kp SPACE &kp FSLH &kp SPACE>;
            label = "ONEC_CLOSE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESCAPE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                         &kp NUMBER_6  &kp N7               &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                          &kp Y         &kp U                &kp I          &kp O    &kp P     &kp BACKSLASH
&kp LEFT_GUI  &kp A         &kp S         &kp D         &kp F         &kp G                          &kp H         &kp J                &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B   &kp LBKT     &kp RBKT  &kp N         &kp M                &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                          &kp LEFT_ALT  &kp LCTRL     &mo 1   &kp SPACE    &kp RET   &lt 2 DELETE  &mt RCTRL BACKSPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            bindings = <
&kp F1  &kp F2  &kp F3              &kp F4          &kp F5         &kp F6                                              &kp F7           &kp F8           &kp F9           &kp F10          &kp F11      &kp F12
&trans  &trans  &kp HOME            &kp UP_ARROW    &kp END        &kp INSERT                                          &kp PAGE_UP      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans       &trans
&trans  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &kp ENTER                                           &kp PAGE_DOWN    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &onec_open   &kp KP_NUMBER_0
&trans  &trans  &kp LC(LEFT_ARROW)  &trans          &kp RC(RIGHT)  &kp DEL     &kp LC(PAUSE_BREAK)    &kp KP_NUMBER_0  &kp PRINTSCREEN  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &onec_close  &trans
                                    &trans          &trans         &trans      &trans                 &trans           &trans           &kp LCTRL        &kp LEFT_ALT
            >;
        };

        higher_layer {
            bindings = <
&trans  &trans  &kp AT_SIGN           &kp DOLLAR     &kp HASH               &trans                       &trans       &trans            &trans          &trans             &trans           &trans
&trans  &trans  &kp LESS_THAN         &kp EQUAL      &kp GREATER_THAN       &kp GRAVE                    &trans       &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RIGHT_BRACKET  &trans           &trans
&trans  &trans  &kp LEFT_PARENTHESIS  &kp MINUS      &kp RIGHT_PARENTHESIS  &kp PLUS                     &kp PERCENT  &kp LEFT_BRACE    &kp SEMICOLON   &kp RIGHT_BRACE    &kp EXCLAMATION  &trans
&trans  &trans  &kp ASTERISK          &kp RS(COLON)  &kp SLASH              &trans     &trans    &trans  &trans       &kp PIPE          &kp TILDE       &kp AMPERSAND      &trans           &trans
                                      &trans         &trans                 &trans     &trans    &trans  &trans       &trans            &trans
            >;
        };
    };
};
